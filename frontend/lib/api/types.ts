/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/products/{product_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить конкретный продукт */
        get: operations["get_product_api_products__product_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список продуктов */
        get: operations["get_products_api_products_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/category/{category_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить продукты по категории */
        get: operations["get_products_by_category_api_category__category_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/products/{product_id}/recommendations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить рекомендованные продукты */
        get: operations["get_recommendations_api_products__product_id__recommendations_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить информацию о конкретном пользователе */
        get: operations["get_user_api_users_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Добавить пользователя */
        post: operations["create_user_api_users__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{user_id}/password/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Обновить пароль */
        put: operations["update_user_password_api_users__user_id__password__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{user_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Удалить пользователя */
        delete: operations["delete_user_api_users__user_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Аутентификация пользователя */
        post: operations["login_user_api_users_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/carts/items/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Добавить товар в корзину */
        post: operations["add_to_cart_api_users_carts_items__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/carts/items/{product_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Обновить количество товара */
        put: operations["update_cart_item_api_users_carts_items__product_id___put"];
        post?: never;
        /** Удалить товар из корзины */
        delete: operations["remove_from_cart_api_users_carts_items__product_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/carts/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить содержимое корзины */
        get: operations["get_cart_api_users_carts__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/order/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Создание заказа */
        post: operations["create_order_api_users_order__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/order/{order_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получение заказа по ID */
        get: operations["get_order_api_users_order__order_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/orders/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получение всех заказов пользователя */
        get: operations["get_user_orders_api_users_orders__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CartProductItemSchema */
        CartProductItemSchema: {
            /** Id */
            id: string;
            /** Quantity */
            quantity: number;
            cost: components["schemas"]["Cost"];
            merchandise: components["schemas"]["Merchandise"];
        };
        /** CartProductRequestSchema */
        CartProductRequestSchema: {
            /** Product Id */
            product_id: number;
            /** Variant Id */
            variant_id?: string | null;
            /** Quantity */
            quantity: number;
        };
        /** CartResponseSchema */
        CartResponseSchema: {
            /** User Id */
            user_id: number;
            /** Items */
            items: components["schemas"]["CartProductItemSchema"][];
            /** Total Items */
            total_items: number;
            /** Total Price */
            total_price: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** CartUpdateResponseSchema */
        CartUpdateResponseSchema: {
            /** Success */
            success: boolean;
            /** Message */
            message: string;
            cart: components["schemas"]["CartResponseSchema"];
        };
        /** Cost */
        Cost: {
            totalAmount: components["schemas"]["CostAmount"];
        };
        /** CostAmount */
        CostAmount: {
            /** Amount */
            amount: string;
            /** Currencycode */
            currencyCode: string;
        };
        /** FeaturedImage */
        FeaturedImage: {
            /** Url */
            url: string | null;
            /** Alttext */
            altText: string | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** ImageEdgeSchema */
        ImageEdgeSchema: {
            node: components["schemas"]["ProductImageNodeSchema"];
        };
        /** Merchandise */
        Merchandise: {
            /** Id */
            id: string;
            /** Title */
            title: string;
            product: components["schemas"]["ProductInfo"];
            /** Selectedoptions */
            selectedOptions: components["schemas"]["SelectedOption"][];
        };
        /** MoneySchema */
        MoneySchema: {
            /** Amount */
            amount: string;
            /** Currencycode */
            currencyCode: string;
        };
        /** OrderSchema */
        OrderSchema: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Payment */
            payment: boolean;
            /** Created At */
            created_at?: string | null;
            /** Updated At */
            updated_at?: string | null;
            /** Order Id */
            order_id?: string | null;
            /**
             * Status
             * @default pending
             */
            status: string;
            /**
             * Total Amount
             * @default 0
             */
            total_amount: number;
            /**
             * Currency Code
             * @default USD
             */
            currency_code: string;
            /** Email */
            email?: string | null;
            /** Shipping Address */
            shipping_address?: {
                [key: string]: unknown;
            } | null;
            /** Payment Method */
            payment_method?: string | null;
            /** Items */
            items?: unknown[] | null;
        };
        /** PriceRangeSchema */
        PriceRangeSchema: {
            minVariantPrice: components["schemas"]["MoneySchema"];
            maxVariantPrice: components["schemas"]["MoneySchema"];
        };
        /** ProductImageNodeSchema */
        ProductImageNodeSchema: {
            /** Url */
            url: string;
            /** Alttext */
            altText?: string | null;
            /** Width */
            width?: number | null;
            /** Height */
            height?: number | null;
        };
        /** ProductInfo */
        ProductInfo: {
            /** Id */
            id: string;
            /** Title */
            title: string;
            /** Handle */
            handle: string;
            featuredImage: components["schemas"]["FeaturedImage"] | null;
        };
        /** ProductListResponseSchema */
        ProductListResponseSchema: {
            /** Edges */
            edges: {
                [key: string]: components["schemas"]["ProductResponseSchema"];
            }[];
        };
        /** ProductOptionSchema */
        ProductOptionSchema: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Values */
            values: string[];
        };
        /** ProductResponseSchema */
        ProductResponseSchema: {
            /** Title */
            title: string;
            /** Description */
            description: string;
            /** Descriptionhtml */
            descriptionHtml?: string | null;
            /** Handle */
            handle?: string | null;
            /** Id */
            id: string;
            /** Availableforsale */
            availableForSale: boolean;
            priceRange: components["schemas"]["PriceRangeSchema"];
            /** Options */
            options: components["schemas"]["ProductOptionSchema"][];
            /** Variants */
            variants: {
                [key: string]: components["schemas"]["VariantEdgeSchema"][];
            };
            featuredImage: components["schemas"]["ProductImageNodeSchema"];
            /** Images */
            images: {
                [key: string]: components["schemas"]["ImageEdgeSchema"][];
            };
            seo: components["schemas"]["SeoSchema"];
            /** Tags */
            tags: string[];
            /**
             * Updatedat
             * Format: date-time
             */
            updatedAt: string;
            /**
             * Rating
             * @default 0
             */
            rating: number;
        };
        /** ProductVariantNodeSchema */
        ProductVariantNodeSchema: {
            /** Id */
            id: string;
            /** Availableforsale */
            availableForSale: boolean;
            /** Selectedoptions */
            selectedOptions: components["schemas"]["SelectedOptionSchema"][];
            price: components["schemas"]["MoneySchema"];
        };
        /** SelectedOption */
        SelectedOption: {
            /** Name */
            name: string;
            /** Value */
            value: string;
        };
        /** SelectedOptionSchema */
        SelectedOptionSchema: {
            /** Name */
            name: string;
            /** Value */
            value: string;
        };
        /** SeoSchema */
        SeoSchema: {
            /** Title */
            title: string;
            /** Description */
            description: string;
        };
        /** UserAuth */
        UserAuth: {
            /** Password */
            password: string;
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** UserInit */
        UserInit: {
            /** Token */
            token: string;
        };
        /** UserSchema */
        UserSchema: {
            /** Password */
            password: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Username */
            username: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** VariantEdgeSchema */
        VariantEdgeSchema: {
            node: components["schemas"]["ProductVariantNodeSchema"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_product_api_products__product_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                product_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_products_api_products_get: {
        parameters: {
            query?: {
                page?: number;
                count?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_products_by_category_api_category__category_id__get: {
        parameters: {
            query?: {
                page?: number;
                count?: number;
            };
            header?: never;
            path: {
                category_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductListResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recommendations_api_products__product_id__recommendations_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                product_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductListResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_user_api_users_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserSchema"];
                };
            };
        };
    };
    create_user_api_users__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["UserSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_password_api_users__user_id__password__put: {
        parameters: {
            query: {
                new_password: string;
            };
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_user_api_users__user_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_user_api_users_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["UserAuth"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserInit"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_to_cart_api_users_carts_items__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CartProductRequestSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CartResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_cart_item_api_users_carts_items__product_id___put: {
        parameters: {
            query: {
                quantity: number;
                variant_id?: string | null;
            };
            header?: never;
            path: {
                product_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CartResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_from_cart_api_users_carts_items__product_id___delete: {
        parameters: {
            query?: {
                variant_id?: string | null;
            };
            header?: never;
            path: {
                product_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CartUpdateResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_cart_api_users_carts__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CartResponseSchema"];
                };
            };
        };
    };
    create_order_api_users_order__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrderSchema"];
                };
            };
        };
    };
    get_order_api_users_order__order_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                order_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrderSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_user_orders_api_users_orders__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrderSchema"][];
                };
            };
        };
    };
}
