
services:
  traefik:
    image: traefik:v3.0
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - "80:80"
      # - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.rule=PathPrefix(`/api`)
      - traefik.http.routers.app.entrypoints=web
      - traefik.http.routers.app.priority=10
      - traefik.http.services.app.loadbalancer.server.port=8000
      - traefik.http.middlewares.app-stripprefix.stripprefix.prefixes=/api
      - traefik.http.routers.app.middlewares=app-stripprefix
    networks:
      - traefik
      - default
    ports:
      - "8000:8000"  # Expose app on port 8000

  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_DB=${DBNAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build: ./frontend
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: pnpm dev
    expose:
      - "3000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=PathPrefix(`/`)
      - traefik.http.routers.web.entrypoints=web
      - traefik.http.routers.web.priority=1
      - traefik.http.services.web.loadbalancer.server.port=3000
    networks:
      - traefik
      - default

volumes:
  postgres_data:

networks:
  traefik:
    driver: bridge
