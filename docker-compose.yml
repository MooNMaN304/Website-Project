version: "3.9"

services:
  traefik:
    image: traefik:v3.0
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik

  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  app:
    build: .
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload --workers 4
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.rule=PathPrefix(`/backend`)
      - traefik.http.routers.app.entrypoints=web
      - traefik.http.middlewares.strip-backend.stripprefix.prefixes=/backend
      - traefik.http.routers.app.middlewares=strip-backend
      - traefik.http.services.app.loadbalancer.server.port=8000
    networks:
      - traefik
      - default

  web:
    build: ./frontend
    depends_on:
      - app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: pnpm dev
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=PathPrefix(`/`)
      - traefik.http.routers.web.entrypoints=web
      - traefik.http.routers.web.priority=10
      - traefik.http.services.web.loadbalancer.server.port=3000
    networks:
      - traefik

volumes:
  postgres_data:

networks:
  traefik:
    driver: bridge
  default:
    driver: bridge
